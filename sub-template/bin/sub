#!/usr/bin/env bash
#
# This is the nested sub that expects/requires '_SUB_ROOT' to be set by the
# top-level sub and the intervening directory structure to have the general
# form:
#   sub-root/libexec/sub-1/libexec/sub-2/libexec/sub-3/bin/sub-leaf
#
# At any point, the current subs "root" is one directory up from the container
# of this script.
#
############################
#
# Usage: %fullSub% ...
#
# Summary: Summary of `%fullSub%` needed...
#
# Help: Help for `%fullSub%` needed...
#
set -e

# Locate the root directory and it's libexec
export _SUB_ROOT="$(dirname "$(dirname "$0")")"

libexec="$_CUR_ROOT/libexec"

command="$1"
case "$command" in
  "" | "-h" | "--help" )
    exec "${libexec}/help"
    ;;
  * )
    command_path="${libexec}/$command"
    if [ -d "$command_path" ]; then
      command_path="$command_path/bin/$command"
    fi

    if [ ! -x "$command_path" ]; then
      avail=( $("$libexec/commands" --no-sh) )

      # :NOTE: printf can't deal with an array argument, event quoted
      echo "%fullSub%: no such command \`$command' : ( ${avail[@]} )" >&2
      echo >&2
      exit 1
    fi

    shift
    exec "$command_path" "$@"
    ;;
esac
